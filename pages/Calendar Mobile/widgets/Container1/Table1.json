{
    "boxShadow": "none",
    "widgetName": "Table1",
    "columnOrder": [
        "slot",
        "customColumn1"
    ],
    "isVisibleDownload": false,
    "topRow": 28,
    "bottomRow": 94,
    "parentRowSpace": 10,
    "isSortable": true,
    "type": "TABLE_WIDGET",
    "parentColumnSpace": 74,
    "dynamicTriggerPathList": [],
    "leftColumn": 0,
    "dynamicBindingPathList": [
        {"key": "tableData"},
        {"key": "primaryColumns.slot.computedValue"},
        {"key": "derivedColumns.customColumn1.menuButtonLabel"},
        {"key": "primaryColumns.customColumn1.menuButtonLabel"},
        {"key": "accentColor"}
    ],
    "primaryColumns": {
        "customColumn1": {
            "isCellVisible": true,
            "boxShadow": "none",
            "isDerived": true,
            "onClick": "{{showModal('Modal1')}}",
            "computedValue": "{{Table1.sanitizedTableData.map((currentRow) => ( currentRow.customColumn1))}}",
            "menuButtonLabel": "{{Table1.sanitizedTableData.map((currentRow) => ( 'Open Menu'))}}",
            "buttonColor": "#2E3D49",
            "iconName": "",
            "label": "Schedule",
            "isVisible": true,
            "buttonLabel": "Schedule",
            "columnType": "button",
            "horizontalAlignment": "CENTER",
            "borderRadius": "0px",
            "buttonVariant": "PRIMARY",
            "width": 150,
            "id": "customColumn1",
            "isDisabled": false,
            "buttonLabelColor": "#FFFFFF",
            "cellBackground": "#FFFFFF"
        },
        "slot": {
            "isCellVisible": true,
            "boxShadow": "none",
            "isDerived": false,
            "computedValue": "{{Table1.sanitizedTableData.map((currentRow) => ( currentRow.slot))}}",
            "textSize": "1rem",
            "index": 0,
            "isVisible": true,
            "label": "Time Slot",
            "fontStyle": "REGULAR,BOLD",
            "columnType": "text",
            "horizontalAlignment": "CENTER",
            "borderRadius": "0px",
            "width": 150,
            "enableFilter": true,
            "enableSort": true,
            "id": "slot",
            "cellBackground": "#FFFFFF",
            "verticalAlignment": "CENTER"
        }
    },
    "delimiter": ",",
    "columnActions": [{
        "actionPayloads": [],
        "label": "Schedule",
        "id": "2ty92diso2",
        "dynamicTrigger": "{{showModal('Modal1')}}"
    }],
    "defaultSearchText": "",
    "migrated": true,
    "derivedColumns": {"customColumn1": {
        "boxShadow": "none",
        "isDerived": true,
        "onClick": "{{showModal('Modal1')}}",
        "computedValue": "",
        "menuButtonLabel": "{{Table1.sanitizedTableData.map((currentRow) => ( 'Open Menu'))}}",
        "buttonColor": "#2E3D49",
        "buttonStyle": "#29CCA3",
        "label": "Schedule",
        "isVisible": true,
        "buttonLabel": "Schedule",
        "columnType": "button",
        "horizontalAlignment": "CENTER",
        "borderRadius": "0px",
        "width": 150,
        "id": "customColumn1",
        "buttonLabelColor": "#FFFFFF",
        "cellBackground": "#FFFFFF"
    }},
    "labelTextSize": "0.875rem",
    "rightColumn": 64,
    "textSize": "0.875rem",
    "widgetId": "zereqs32ms",
    "accentColor": "{{appsmith.theme.colors.primaryColor}}",
    "isVisibleFilters": false,
    "tableData": "{{\nfunction() {\n  let bookings = ListEvents.data.items;\n\tlet bookingIndex = 0;\n  const startHour = 10;\n\tconst endHour = 23;\n  let startingTime = moment(DatePicker1.selectedDate, \"DD/MM/YYYY\").tz(\"Asia/Kolkata\");\n  let endingTime = moment(DatePicker1.selectedDate, \"DD/MM/YYYY\").tz(\"Asia/Kolkata\");\n  startingTime.hour(startHour);\n  startingTime.minutes(0);\n  endingTime.hour(endHour);\n  endingTime.minutes(0);\n  endingTime.seconds(0);\n  let slots = [];\n  const slotDuration = Number(durationDropdown.selectedOptionValue);\n  console.log(\"Scheduler starting \",startingTime.toISOString());\n  while(startingTime.isBefore(endingTime)) {\n  if (startingTime.isBefore(moment().tz(\"Asia/Kolkata\"))) {\n\t  startingTime = moment().tz(\"Asia/Kolkata\");\n\t  if (startingTime.minutes() > 30) { \n\t    startingTime.minutes(0); \n\t    startingTime.hour(startingTime.hour() + 1); \n\t  } else \n\t    startingTime.minutes(30);\n\t  console.log(\"Scheduler set to nearest hour \" + startingTime.hour());\n  }\n  let booking = bookings[bookingIndex];\n  let bookingStart = undefined; \n  if (booking) {\n  \tbookingStart = moment(booking.start.dateTime).tz(\"Asia/Kolkata\");\n    while(bookingStart.isBefore(startingTime)) {\n      console.log(\"Scheduler booking is before starttime\", booking,bookingStart.toISOString(), startingTime.toISOString());\n      bookingIndex += 1;\n      booking = bookings[bookingIndex];\n      if (booking === undefined) {\n        bookingStart.hour(endHour);\n        break;\n      }\n      bookingStart = moment(booking.start.dateTime).tz(\"Asia/Kolkata\");\n      \n    } \n  } else { \n    console.log(\"Scheduler Default\");\t\n    bookingStart = moment(DatePicker1.selectedDate, \"DD/MM/YYYY\").tz(\"Asia/Kolkata\");\n    bookingStart.hour(endHour);\n    bookingStart.minutes(0);\n    bookingStart.seconds(0);\n\t}\n  console.log(\"Scheduler starts \" + startingTime.format(\"DD-MM-YYYY HH:mm\") + \" end \" + bookingStart.format(\"DD-MM-YYYY HH:mm\"));\n  const slotNum = Math.floor(Math.round(moment.duration(bookingStart.diff(startingTime)).asMinutes()) / slotDuration);\n  console.log(\"Scheduler Slot num \" + slotNum);\n  for(let i = 0; i < slotNum; i++) {\n    const slotStartTime = startingTime.tz(timeZone.selectedOptionValue).format(\"HH:mm\");\n    startingTime.add(slotDuration, \"minutes\");\n    const slotEndTime = startingTime.tz(timeZone.selectedOptionValue).format(\"HH:mm\");\n    console.log(\"Scheduler \" + slotStartTime);\n    slots.push({ startTime: slotStartTime, endTime: slotEndTime });\n    startingTime = startingTime.tz(\"Asia/Kolkata\");\n  }\n  console.log(\"Scheduler had booking\", booking);\n    startingTime = booking ? moment(booking.end.dateTime).tz(\"Asia/Kolkata\") : startingTime.hour(endHour);\n  \tbookingIndex+=1;\n  \tconsole.log(\"Scheduler next start \" + startingTime.tz(\"Asia/Kolkata\").format(\"DD-MM-YYYY HH:mm\") + \"-\" + endingTime.format(\"DD-MM-YYYY HH:mm\"))\n  }\nreturn slots.map((slot) => { return { slot: slot.startTime + \" - \" + slot.endTime } })\n}()\n}}",
    "isVisible": true,
    "label": "Data",
    "searchKey": "",
    "fontStyle": "REGULAR",
    "version": 3,
    "parentId": "89bt22aobo",
    "serverSidePaginationEnabled": true,
    "isLoading": false,
    "isVisibleCompactMode": false,
    "horizontalAlignment": "CENTER",
    "isVisibleSearch": false,
    "childStylesheet": {
        "button": {
            "boxShadow": "none",
            "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
            "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
        },
        "iconButton": {
            "boxShadow": "none",
            "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
            "menuColor": "{{appsmith.theme.colors.primaryColor}}"
        },
        "menuButton": {
            "boxShadow": "none",
            "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
            "menuColor": "{{appsmith.theme.colors.primaryColor}}"
        }
    },
    "borderRadius": "0px",
    "isVisiblePagination": false,
    "cellBackground": "#FFFFFF",
    "columnSizeMap": {"slot": 192},
    "verticalAlignment": "CENTER"
}